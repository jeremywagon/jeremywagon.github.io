I"A<h2 id="1-iteration">1. Iteration</h2>

<p>Python에서 iteration은 scanning과 selecting의 결합이다.</p>

<p>object를 왼쪽에서 오른쪽으로 scanning하여 값을 하나씩 selecting하는 것을 말한다.</p>

<p>가장 기본적인 iteration은 <code class="language-plaintext highlighter-rouge">for</code> loop을 통해 구현할 수 있다.</p>

<p>iteration의 대상은 <code class="language-plaintext highlighter-rouge">iterable object</code> 이며 <code class="language-plaintext highlighter-rouge">list</code>, <code class="language-plaintext highlighter-rouge">tuple</code>, <code class="language-plaintext highlighter-rouge">str</code> 같은 sequence type이 여기에 포함된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">" "</span><span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">for</code> loop 을 수행할 경우 내부적으로 <code class="language-plaintext highlighter-rouge">iter</code>를 호출하여 <code class="language-plaintext highlighter-rouge">iterator</code>를 반환하고 <code class="language-plaintext highlighter-rouge">iterator</code>의 <code class="language-plaintext highlighter-rouge">__next__()</code>를 호출한다.</p>

<p>대상이 <code class="language-plaintext highlighter-rouge">iterator</code>일 경우 <code class="language-plaintext highlighter-rouge">__next__</code>를 바로 호출한다.</p>

<h2 id="2-iterable">2. <code class="language-plaintext highlighter-rouge">iterable</code></h2>

<p>Python에서는 <code class="language-plaintext highlighter-rouge">iterable</code>과 <code class="language-plaintext highlighter-rouge">iterator</code>가 의미하는 것이 다르다.</p>

<p><code class="language-plaintext highlighter-rouge">iterable</code> 은 <code class="language-plaintext highlighter-rouge">iter()</code>의 매개변수 또는 <code class="language-plaintext highlighter-rouge">__iter__(self)</code>를 호출할 수 있는 객체다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">help</span><span class="p">(</span><span class="nb">iter</span><span class="p">)</span>
<span class="n">Help</span> <span class="n">on</span> <span class="n">built</span><span class="o">-</span><span class="ow">in</span> <span class="n">function</span> <span class="nb">iter</span> <span class="ow">in</span> <span class="n">module</span> <span class="n">builtins</span><span class="p">:</span>

<span class="nb">iter</span><span class="p">(...)</span>
    <span class="nb">iter</span><span class="p">(</span><span class="n">iterable</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">iterator</span>
    <span class="nb">iter</span><span class="p">(</span><span class="nb">callable</span><span class="p">,</span> <span class="n">sentinel</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">iterator</span>
    
    <span class="n">Get</span> <span class="n">an</span> <span class="n">iterator</span> <span class="k">from</span> <span class="n">an</span> <span class="nb">object</span><span class="p">.</span>  <span class="n">In</span> <span class="n">the</span> <span class="n">first</span> <span class="n">form</span><span class="p">,</span> <span class="n">the</span> <span class="n">argument</span> <span class="n">must</span>
    <span class="n">supply</span> <span class="n">its</span> <span class="n">own</span> <span class="n">iterator</span><span class="p">,</span> <span class="ow">or</span> <span class="n">be</span> <span class="n">a</span> <span class="n">sequence</span><span class="p">.</span>
    <span class="n">In</span> <span class="n">the</span> <span class="n">second</span> <span class="n">form</span><span class="p">,</span> <span class="n">the</span> <span class="nb">callable</span> <span class="ow">is</span> <span class="n">called</span> <span class="n">until</span> <span class="n">it</span> <span class="n">returns</span> <span class="n">the</span> <span class="n">sentinel</span><span class="p">.</span>

</code></pre></div></div>

<h2 id="3-iterator">3. <code class="language-plaintext highlighter-rouge">iterator</code></h2>

<p><code class="language-plaintext highlighter-rouge">iter</code>의 호출로 반환값이 <code class="language-plaintext highlighter-rouge">iterator</code>다.</p>

<p><code class="language-plaintext highlighter-rouge">iterator</code>는 <code class="language-plaintext highlighter-rouge">__next__</code>를 호출할 수 있는 객체다.</p>

<p><code class="language-plaintext highlighter-rouge">iterator</code>는 값을 모두 메모리에 적재하는 것이 아니라 한번에 하나씩 값을 가져온다.</p>

<p><code class="language-plaintext highlighter-rouge">__next__()</code>를 호출하여 값을 하나씩 가져오고 <code class="language-plaintext highlighter-rouge">StopIeration</code>을 catch 하면 호출을 중단한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file iterator를 이용하여 line 가져오기.
</span><span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">open</span><span class="p">(</span><span class="s">"text.txt"</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<p>최근 Python에서 <code class="language-plaintext highlighter-rouge">dict</code>는 내부적으로 <code class="language-plaintext highlighter-rouge">iterator</code>를 가지고 있다.
그래서 다음 스타일의 코딩이 가능하다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">D</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'name'</span><span class="p">:</span> <span class="s">'Smith'</span><span class="p">,</span>
    <span class="s">'age'</span><span class="p">:</span> <span class="mi">21</span>
<span class="p">}</span>
<span class="c1"># D.keys()가 아닌 직접 D를 for loop의 대상으로 삼을 수 있다.
# 변수 k에는 key가 할당된다.
</span><span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">D</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">D</span><span class="p">[</span><span class="n">k</span><span class="p">])</span>
</code></pre></div></div>

<h2 id="4-그-외-iteration-tool">4. 그 외 iteration tool</h2>

<p>iteration tool은 <code class="language-plaintext highlighter-rouge">for</code> 뿐만이 아니다.</p>

<p><code class="language-plaintext highlighter-rouge">map()</code>, <code class="language-plaintext highlighter-rouge">reduce()</code>, <code class="language-plaintext highlighter-rouge">comprehension</code>, <code class="language-plaintext highlighter-rouge">zip()</code>, <code class="language-plaintext highlighter-rouge">enumerate()</code>, <code class="language-plaintext highlighter-rouge">filter()</code>, <code class="language-plaintext highlighter-rouge">sorted()</code> 등 다양한 iteration tool이 존재한다.</p>
:ET