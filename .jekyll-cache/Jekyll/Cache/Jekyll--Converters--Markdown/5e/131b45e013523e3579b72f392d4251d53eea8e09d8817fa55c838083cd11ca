I"dk<h2 id="1-dir-function">1. <code class="language-plaintext highlighter-rouge">dir</code> function</h2>

<p>Python interpreter(shell)에 <code class="language-plaintext highlighter-rouge">dir()</code> 를 입력하면 caller의 스코프에 있는 변수들의 list를 보여준다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"python"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">()</span>
<span class="p">[</span><span class="s">'__annotations__'</span><span class="p">,</span> <span class="s">'__builtins__'</span><span class="p">,</span> <span class="s">'__doc__'</span><span class="p">,</span> <span class="s">'__loader__'</span><span class="p">,</span>
<span class="s">'__name__'</span><span class="p">,</span> <span class="s">'__package__'</span><span class="p">,</span> <span class="s">'__spec__'</span><span class="p">,</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'x'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">dir()</code> 의 매개변수로 built-in type이나 object를 넘겨주면 해당 타입의 attributes의 list를 볼 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
<span class="p">[</span><span class="s">'__add__'</span><span class="p">,</span> <span class="s">'__class__'</span><span class="p">,</span> <span class="s">'__contains__'</span><span class="p">,</span> <span class="s">'__delattr__'</span><span class="p">,</span> <span class="s">'__dir__'</span><span class="p">,</span> <span class="s">'__doc__'</span><span class="p">,</span> <span class="s">'__eq__'</span><span class="p">,</span> <span class="s">'__format__'</span><span class="p">,</span> <span class="s">'__ge__'</span><span class="p">,</span> <span class="s">'__getattribute__'</span><span class="p">,</span> <span class="s">'__getitem__'</span><span class="p">,</span> <span class="s">'__getnewargs__'</span><span class="p">,</span> <span class="s">'__gt__'</span><span class="p">,</span> <span class="s">'__hash__'</span><span class="p">,</span> <span class="s">'__init__'</span><span class="p">,</span> <span class="s">'__init_subclass__'</span><span class="p">,</span> <span class="s">'__iter__'</span><span class="p">,</span> <span class="s">'__le__'</span><span class="p">,</span> <span class="s">'__len__'</span><span class="p">,</span> <span class="s">'__lt__'</span><span class="p">,</span> <span class="s">'__mod__'</span><span class="p">,</span> <span class="s">'__mul__'</span><span class="p">,</span> <span class="s">'__ne__'</span><span class="p">,</span> <span class="s">'__new__'</span><span class="p">,</span> <span class="s">'__reduce__'</span><span class="p">,</span> <span class="s">'__reduce_ex__'</span><span class="p">,</span> <span class="s">'__repr__'</span><span class="p">,</span> <span class="s">'__rmod__'</span><span class="p">,</span> <span class="s">'__rmul__'</span><span class="p">,</span> <span class="s">'__setattr__'</span><span class="p">,</span> <span class="s">'__sizeof__'</span><span class="p">,</span> <span class="s">'__str__'</span><span class="p">,</span> <span class="s">'__subclasshook__'</span><span class="p">,</span> <span class="s">'capitalize'</span><span class="p">,</span> <span class="s">'casefold'</span><span class="p">,</span> <span class="s">'center'</span><span class="p">,</span> <span class="s">'count'</span><span class="p">,</span> <span class="s">'encode'</span><span class="p">,</span> <span class="s">'endswith'</span><span class="p">,</span> <span class="s">'expandtabs'</span><span class="p">,</span> <span class="s">'find'</span><span class="p">,</span> <span class="s">'format'</span><span class="p">,</span> <span class="s">'format_map'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">,</span> <span class="s">'isalnum'</span><span class="p">,</span> <span class="s">'isalpha'</span><span class="p">,</span> <span class="s">'isascii'</span><span class="p">,</span> <span class="s">'isdecimal'</span><span class="p">,</span> <span class="s">'isdigit'</span><span class="p">,</span> <span class="s">'isidentifier'</span><span class="p">,</span> <span class="s">'islower'</span><span class="p">,</span> <span class="s">'isnumeric'</span><span class="p">,</span> <span class="s">'isprintable'</span><span class="p">,</span> <span class="s">'isspace'</span><span class="p">,</span> <span class="s">'istitle'</span><span class="p">,</span> <span class="s">'isupper'</span><span class="p">,</span> <span class="s">'join'</span><span class="p">,</span> <span class="s">'ljust'</span><span class="p">,</span> <span class="s">'lower'</span><span class="p">,</span> <span class="s">'lstrip'</span><span class="p">,</span> <span class="s">'maketrans'</span><span class="p">,</span> <span class="s">'partition'</span><span class="p">,</span> <span class="s">'replace'</span><span class="p">,</span> <span class="s">'rfind'</span><span class="p">,</span> <span class="s">'rindex'</span><span class="p">,</span> <span class="s">'rjust'</span><span class="p">,</span> <span class="s">'rpartition'</span><span class="p">,</span> <span class="s">'rsplit'</span><span class="p">,</span> <span class="s">'rstrip'</span><span class="p">,</span> <span class="s">'split'</span><span class="p">,</span> <span class="s">'splitlines'</span><span class="p">,</span> <span class="s">'startswith'</span><span class="p">,</span> <span class="s">'strip'</span><span class="p">,</span> <span class="s">'swapcase'</span><span class="p">,</span> <span class="s">'title'</span><span class="p">,</span> <span class="s">'translate'</span><span class="p">,</span> <span class="s">'upper'</span><span class="p">,</span> <span class="s">'zfill'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">(</span><span class="nb">dict</span><span class="p">)</span>
<span class="p">[</span><span class="s">'__class__'</span><span class="p">,</span> <span class="s">'__contains__'</span><span class="p">,</span> <span class="s">'__delattr__'</span><span class="p">,</span> <span class="s">'__delitem__'</span><span class="p">,</span> <span class="s">'__dir__'</span><span class="p">,</span> <span class="s">'__doc__'</span><span class="p">,</span> <span class="s">'__eq__'</span><span class="p">,</span> <span class="s">'__format__'</span><span class="p">,</span> <span class="s">'__ge__'</span><span class="p">,</span> <span class="s">'__getattribute__'</span><span class="p">,</span> <span class="s">'__getitem__'</span><span class="p">,</span> <span class="s">'__gt__'</span><span class="p">,</span> <span class="s">'__hash__'</span><span class="p">,</span> <span class="s">'__init__'</span><span class="p">,</span> <span class="s">'__init_subclass__'</span><span class="p">,</span> <span class="s">'__iter__'</span><span class="p">,</span> <span class="s">'__le__'</span><span class="p">,</span> <span class="s">'__len__'</span><span class="p">,</span> <span class="s">'__lt__'</span><span class="p">,</span> <span class="s">'__ne__'</span><span class="p">,</span> <span class="s">'__new__'</span><span class="p">,</span> <span class="s">'__reduce__'</span><span class="p">,</span> <span class="s">'__reduce_ex__'</span><span class="p">,</span> <span class="s">'__repr__'</span><span class="p">,</span> <span class="s">'__reversed__'</span><span class="p">,</span> <span class="s">'__setattr__'</span><span class="p">,</span> <span class="s">'__setitem__'</span><span class="p">,</span> <span class="s">'__sizeof__'</span><span class="p">,</span> <span class="s">'__str__'</span><span class="p">,</span> <span class="s">'__subclasshook__'</span><span class="p">,</span> <span class="s">'clear'</span><span class="p">,</span> <span class="s">'copy'</span><span class="p">,</span> <span class="s">'fromkeys'</span><span class="p">,</span> <span class="s">'get'</span><span class="p">,</span> <span class="s">'items'</span><span class="p">,</span> <span class="s">'keys'</span><span class="p">,</span> <span class="s">'pop'</span><span class="p">,</span> <span class="s">'popitem'</span><span class="p">,</span> <span class="s">'setdefault'</span><span class="p">,</span> <span class="s">'update'</span><span class="p">,</span> <span class="s">'values'</span><span class="p">]</span>
</code></pre></div></div>

<p><strong>List comprehensions</strong>를 통해서 간단하게 double underscore(<code class="language-plaintext highlighter-rouge">__</code>)를 가지지 않은 attributes의 list를 볼 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="n">a</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">a</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'__'</span><span class="p">)]</span>
<span class="p">[</span><span class="s">'append'</span><span class="p">,</span> <span class="s">'clear'</span><span class="p">,</span> <span class="s">'copy'</span><span class="p">,</span> <span class="s">'count'</span><span class="p">,</span> <span class="s">'extend'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">,</span> <span class="s">'insert'</span><span class="p">,</span> <span class="s">'pop'</span><span class="p">,</span> <span class="s">'remove'</span><span class="p">,</span> <span class="s">'reverse'</span><span class="p">,</span> <span class="s">'sort'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="n">a</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="nb">dict</span><span class="p">)</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">a</span><span class="p">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">'__'</span><span class="p">)]</span>
<span class="p">[</span><span class="s">'clear'</span><span class="p">,</span> <span class="s">'copy'</span><span class="p">,</span> <span class="s">'fromkeys'</span><span class="p">,</span> <span class="s">'get'</span><span class="p">,</span> <span class="s">'items'</span><span class="p">,</span> <span class="s">'keys'</span><span class="p">,</span> <span class="s">'pop'</span><span class="p">,</span> <span class="s">'popitem'</span><span class="p">,</span> <span class="s">'setdefault'</span><span class="p">,</span> <span class="s">'update'</span><span class="p">,</span> <span class="s">'values'</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="2-__doc__doctstring">2. <code class="language-plaintext highlighter-rouge">__doc__</code>(doctstring)</h2>

<p># comment가 statement나 expression 단위의 documentation이라면, docstring은 function, class, module 단위의 documentation이다.</p>

<p>코드가 시작하기 전에 주로 <code class="language-plaintext highlighter-rouge">'''</code> (multi line string) 사이에 작성한다.</p>

<p>쓰여진 doctstring은 해당 function, class 또는 module의 <code class="language-plaintext highlighter-rouge">__doc__</code> 속성에 저장된다.</p>

<p>Python shell에서 직접 <code class="language-plaintext highlighter-rouge">__doc__</code>을 통하여 docstring을 볼 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">math</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">math</span><span class="p">.</span><span class="n">__doc__</span><span class="p">)</span>
<span class="n">This</span> <span class="n">module</span> <span class="n">provides</span> <span class="n">access</span> <span class="n">to</span> <span class="n">the</span> <span class="n">mathematical</span> <span class="n">functions</span>
<span class="n">defined</span> <span class="n">by</span> <span class="n">the</span> <span class="n">C</span> <span class="n">standard</span><span class="p">.</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">random</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">__doc__</span><span class="p">)</span>
<span class="n">Random</span> <span class="n">variable</span> <span class="n">generators</span><span class="p">.</span>

    <span class="n">integers</span>
    <span class="o">--------</span>
           <span class="n">uniform</span> <span class="n">within</span> <span class="nb">range</span>

    <span class="n">sequences</span>
    <span class="o">---------</span>
           <span class="n">pick</span> <span class="n">random</span> <span class="n">element</span>
           <span class="n">pick</span> <span class="n">random</span> <span class="n">sample</span>
           <span class="n">pick</span> <span class="n">weighted</span> <span class="n">random</span> <span class="n">sample</span>
           <span class="n">generate</span> <span class="n">random</span> <span class="n">permutation</span>

    <span class="n">distributions</span> <span class="n">on</span> <span class="n">the</span> <span class="n">real</span> <span class="n">line</span><span class="p">:</span>
    <span class="o">------------------------------</span>
           <span class="n">uniform</span>
           <span class="n">triangular</span>
           <span class="n">normal</span> <span class="p">(</span><span class="n">Gaussian</span><span class="p">)</span>
           <span class="n">lognormal</span>
           <span class="n">negative</span> <span class="n">exponential</span>
           <span class="n">gamma</span>
           <span class="n">beta</span>
           <span class="n">pareto</span>
           <span class="n">Weibull</span>

    <span class="n">distributions</span> <span class="n">on</span> <span class="n">the</span> <span class="n">circle</span> <span class="p">(</span><span class="n">angles</span> <span class="mi">0</span> <span class="n">to</span> <span class="mi">2</span><span class="n">pi</span><span class="p">)</span>
    <span class="o">---------------------------------------------</span>
           <span class="n">circular</span> <span class="n">uniform</span>
           <span class="n">von</span> <span class="n">Mises</span>

<span class="n">General</span> <span class="n">notes</span> <span class="n">on</span> <span class="n">the</span> <span class="n">underlying</span> <span class="n">Mersenne</span> <span class="n">Twister</span> <span class="n">core</span> <span class="n">generator</span><span class="p">:</span>

<span class="o">*</span> <span class="n">The</span> <span class="n">period</span> <span class="ow">is</span> <span class="mi">2</span><span class="o">**</span><span class="mi">19937</span><span class="o">-</span><span class="mf">1.</span>
<span class="o">*</span> <span class="n">It</span> <span class="ow">is</span> <span class="n">one</span> <span class="n">of</span> <span class="n">the</span> <span class="n">most</span> <span class="n">extensively</span> <span class="n">tested</span> <span class="n">generators</span> <span class="ow">in</span> <span class="n">existence</span><span class="p">.</span>
<span class="o">*</span> <span class="n">The</span> <span class="n">random</span><span class="p">()</span> <span class="n">method</span> <span class="ow">is</span> <span class="n">implemented</span> <span class="ow">in</span> <span class="n">C</span><span class="p">,</span> <span class="n">executes</span> <span class="ow">in</span> <span class="n">a</span> <span class="n">single</span> <span class="n">Python</span> <span class="n">step</span><span class="p">,</span>
  <span class="ow">and</span> <span class="ow">is</span><span class="p">,</span> <span class="n">therefore</span><span class="p">,</span> <span class="n">threadsafe</span><span class="p">.</span>
</code></pre></div></div>

<p>함수의 docstring도 직접 볼 수 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">shuffle</span><span class="p">.</span><span class="n">__doc__</span><span class="p">)</span>
<span class="n">Shuffle</span> <span class="nb">list</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">place</span><span class="p">,</span> <span class="ow">and</span> <span class="k">return</span> <span class="bp">None</span><span class="p">.</span>

        <span class="n">Optional</span> <span class="n">argument</span> <span class="n">random</span> <span class="ow">is</span> <span class="n">a</span> <span class="mi">0</span><span class="o">-</span><span class="n">argument</span> <span class="n">function</span> <span class="n">returning</span> <span class="n">a</span>
        <span class="n">random</span> <span class="nb">float</span> <span class="ow">in</span> <span class="p">[</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span> <span class="k">if</span> <span class="n">it</span> <span class="ow">is</span> <span class="n">the</span> <span class="n">default</span> <span class="bp">None</span><span class="p">,</span> <span class="n">the</span>
        <span class="n">standard</span> <span class="n">random</span><span class="p">.</span><span class="n">random</span> <span class="n">will</span> <span class="n">be</span> <span class="n">used</span><span class="p">.</span>
</code></pre></div></div>

<h2 id="3-help-function">3. <code class="language-plaintext highlighter-rouge">help</code> function</h2>

<p>Pydoc의 인터페이스에 속한다.</p>

<p>docstring에 해당하는 정보를 좀 더 readable하게 보여준다.</p>

<p><code class="language-plaintext highlighter-rouge">help()</code>의 매개변수로 모듈, 클래스, 함수를 전달한다. 매개변수의 정보를 보여준다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; help(math)
Help on built-in module math:

NAME
    math

DESCRIPTION
    This module provides access to the mathematical functions
    defined by the C standard.

FUNCTIONS
    acos(x, /)
        Return the arc cosine (measured in radians) of x.
    
    acosh(x, /)
        Return the inverse hyperbolic cosine of x.
    
    asin(x, /)
        Return the arc sine (measured in radians) of x.
    
    asinh(x, /)
        Return the inverse hyperbolic sine of x.
    
    atan(x, /)
        Return the arc tangent (measured in radians) of x.
    
    atan2(y, x, /)
        Return the arc tangent (measured in radians) of y/x.
        
        Unlike atan(y/x), the signs of both x and y are considered.
    
    atanh(x, /)
        Return the inverse hyperbolic tangent of x.
    
    ceil(x, /)
        Return the ceiling of x as an Integral.
        
        This is the smallest integer &gt;= x.
    
    comb(n, k, /)
        Number of ways to choose k items from n items without repetition and without order.
        
        Evaluates to n! / (k! * (n - k)!) when k &lt;= n and evaluates
        to zero when k &gt; n.
        
        Also called the binomial coefficient because it is equivalent
        to the coefficient of k-th term in polynomial expansion of the
        expression (1 + x)**n.
        
        Raises TypeError if either of the arguments are not integers.
        Raises ValueError if either of the arguments are negative.
    
    copysign(x, y, /)
        Return a float with the magnitude (absolute value) of x but the sign of y.
        
        On platforms that support signed zeros, copysign(1.0, -0.0)
        returns -1.0.
    
    cos(x, /)
        Return the cosine of x (measured in radians).
    
    cosh(x, /)
        Return the hyperbolic cosine of x.
    
    degrees(x, /)
        Convert angle x from radians to degrees.
    
    dist(p, q, /)
        Return the Euclidean distance between two points p and q.
        
        The points should be specified as sequences (or iterables) of
        coordinates.  Both inputs must have the same dimension.
        
        Roughly equivalent to:
            sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))
    
    erf(x, /)
        Error function at x.
    
    erfc(x, /)
        Complementary error function at x.
    
    exp(x, /)
        Return e raised to the power of x.
    
    expm1(x, /)
        Return exp(x)-1.
        
        This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.
    
    fabs(x, /)
        Return the absolute value of the float x.
    
    factorial(x, /)
        Find x!.
        
        Raise a ValueError if x is negative or non-integral.
    
    floor(x, /)
        Return the floor of x as an Integral.
        
        This is the largest integer &lt;= x.
    
    fmod(x, y, /)
        Return fmod(x, y), according to platform C.
        
        x % y may differ.
    
    frexp(x, /)
        Return the mantissa and exponent of x, as pair (m, e).
        
        m is a float and e is an int, such that x = m * 2.**e.
        If x is 0, m and e are both 0.  Else 0.5 &lt;= abs(m) &lt; 1.0.
    
    fsum(seq, /)
        Return an accurate floating point sum of values in the iterable seq.
        
        Assumes IEEE-754 floating point arithmetic.
    
    gamma(x, /)
        Gamma function at x.
    
    gcd(x, y, /)
        greatest common divisor of x and y
    
    hypot(...)
        hypot(*coordinates) -&gt; value
        
        Multidimensional Euclidean distance from the origin to a point.
        
        Roughly equivalent to:
            sqrt(sum(x**2 for x in coordinates))
        
        For a two dimensional point (x, y), gives the hypotenuse
        using the Pythagorean theorem:  sqrt(x*x + y*y).
        
        For example, the hypotenuse of a 3/4/5 right triangle is:
        
            &gt;&gt;&gt; hypot(3.0, 4.0)
            5.0
    
    isclose(a, b, *, rel_tol=1e-09, abs_tol=0.0)
        Determine whether two floating point numbers are close in value.
        
          rel_tol
            maximum difference for being considered "close", relative to the
            magnitude of the input values
          abs_tol
            maximum difference for being considered "close", regardless of the
            magnitude of the input values
        
        Return True if a is close in value to b, and False otherwise.
        
        For the values to be considered close, the difference between them
        must be smaller than at least one of the tolerances.
        
        -inf, inf and NaN behave similarly to the IEEE 754 Standard.  That
        is, NaN is not close to anything, even itself.  inf and -inf are
        only close to themselves.
    
    isfinite(x, /)
        Return True if x is neither an infinity nor a NaN, and False otherwise.
    
    isinf(x, /)
        Return True if x is a positive or negative infinity, and False otherwise.
    
    isnan(x, /)
        Return True if x is a NaN (not a number), and False otherwise.
    
    isqrt(n, /)
        Return the integer part of the square root of the input.
    
    ldexp(x, i, /)
        Return x * (2**i).
        
        This is essentially the inverse of frexp().
    
    lgamma(x, /)
        Natural logarithm of absolute value of Gamma function at x.
    
    log(...)
        log(x, [base=math.e])
        Return the logarithm of x to the given base.
        
        If the base not specified, returns the natural logarithm (base e) of x.
    
    log10(x, /)
        Return the base 10 logarithm of x.
    
    log1p(x, /)
        Return the natural logarithm of 1+x (base e).
        
        The result is computed in a way which is accurate for x near zero.
    
    log2(x, /)
        Return the base 2 logarithm of x.
    
    modf(x, /)
        Return the fractional and integer parts of x.
        
        Both results carry the sign of x and are floats.
    
    perm(n, k=None, /)
        Number of ways to choose k items from n items without repetition and with order.
        
        Evaluates to n! / (n - k)! when k &lt;= n and evaluates
        to zero when k &gt; n.
        
        If k is not specified or is None, then k defaults to n
        and the function returns n!.
        
        Raises TypeError if either of the arguments are not integers.
        Raises ValueError if either of the arguments are negative.
    
    pow(x, y, /)
        Return x**y (x to the power of y).
    
    prod(iterable, /, *, start=1)
        Calculate the product of all the elements in the input iterable.
        
        The default start value for the product is 1.
        
        When the iterable is empty, return the start value.  This function is
        intended specifically for use with numeric values and may reject
        non-numeric types.
    
    radians(x, /)
        Convert angle x from degrees to radians.
    
    remainder(x, y, /)
        Difference between x and the closest integer multiple of y.
        
        Return x - n*y where n*y is the closest integer multiple of y.
        In the case where x is exactly halfway between two multiples of
        y, the nearest even value of n is used. The result is always exact.
    
    sin(x, /)
        Return the sine of x (measured in radians).
    
    sinh(x, /)
        Return the hyperbolic sine of x.
    
    sqrt(x, /)
        Return the square root of x.
    
    tan(x, /)
        Return the tangent of x (measured in radians).
    
    tanh(x, /)
        Return the hyperbolic tangent of x.
    
    trunc(x, /)
        Truncates the Real x to the nearest Integral toward 0.
        
        Uses the __trunc__ magic method.

DATA
    e = 2.718281828459045
    inf = inf
    nan = nan
    pi = 3.141592653589793
    tau = 6.283185307179586

FILE
    (built-in)
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;&gt;&gt; help(math.factorial)
Help on built-in function factorial in module math:

factorial(x, /)
    Find x!.
    
    Raise a ValueError if x is negative or non-integral.
</code></pre></div></div>

<h2 id="4-python-module-docs">4. Python Module Docs</h2>

<h2 id="5-idel-help-menu">5. IDEL help menu</h2>

:ET